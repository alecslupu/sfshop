<?php
/*
 * This file is part of the sfShop package.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
*/

/**
 * PluginsfsMenuTable table.
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    sfsCorePlugin
 * @subpackage table
 * @author     Alexandru Emil Lupu <gang.alecs@gmail.com>
 * @license    http://www.opensource.org/licenses/mit-license.php
 */
class PluginsfsMenuTable extends Doctrine_Table
{
  private $type = array(
    'top'     => 1,
    'bottom'  => 2,
    'profile' => 3,
    'main'    => 4,
  );

  /**
   * Returns an instance of this class.
   *
   * @return object PluginsfsMenuTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('PluginsfsMenu');
  }

  public function getItemsByType($type)
  {
    if (!array_key_exists($type, $this->type))
    {
      throw new sfException(
          sprintf('Invalid type supplied "%s". You can choose: $s',
              $type,
              implode(', ', $this->type)
          ));
    }

    return $this->createQuery('menu')->
        leftJoin('menu.Translation')->
        addWhere('menu.type = ?', $this->type[$type])->
        addOrderBy('menu.pos ASC');
  }

  public function fetchMenuByType($type)
  {

    return $this->getItemsByType($type)->
        execute();
  }
}